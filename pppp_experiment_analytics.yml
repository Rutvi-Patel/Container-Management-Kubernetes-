kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: pppp
  namespace: litmus
  creationTimestamp: null
  labels:
    infra_id: 4b2f711e-09a9-47e3-8660-38f269231deb
    revision_id: 508a0669-3d93-418c-880a-9044306c426d
    subject: podtato-main
    workflow_id: 11122f28-f5ab-4123-af7b-b0e2a87c896f
    workflows.argoproj.io/controller-instanceid: 4b2f711e-09a9-47e3-8660-38f269231deb
spec:
  templates:
    - name: argowf-chaos
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: install-application
            template: install-application
            arguments: {}
        - - name: install-chaos-faults
            template: install-chaos-faults
            arguments: {}
        - - name: pod-delete
            template: pod-delete
            arguments: {}
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
            arguments: {}
          - name: delete-application
            template: delete-application
            arguments: {}
    - name: install-application
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/litmus-app-deployer:latest
        args:
          - -namespace={{workflow.parameters.adminModeNamespace}}
          - -typeName=resilient
          - -operation=apply
          - -timeout=400
          - -app=podtato-head
          - -scope=namespace
        resources: {}
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-delete-rm5
            path: /tmp/pod-delete-rm5.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Deletes a pod belonging to a deployment/statefulset/daemonset
                kind: ChaosExperiment

                metadata:
                  name: pod-delete
                  labels:
                    name: pod-delete
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.0.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      # Create and monitor the experiment & helper pods
                      - apiGroups: [""]
                        resources: ["pods"]
                        verbs:
                          [
                            "create",
                            "delete",
                            "get",
                            "list",
                            "patch",
                            "update",
                            "deletecollection",
                          ]
                      # Performs CRUD operations on the events inside chaosengine and chaosresult
                      - apiGroups: [""]
                        resources: ["events"]
                        verbs: ["create", "get", "list", "patch", "update"]
                      # Fetch configmaps details and mount it to the experiment pod (if specified)
                      - apiGroups: [""]
                        resources: ["configmaps"]
                        verbs: ["get", "list"]
                      # Track and get the runner, experiment, and helper pods log
                      - apiGroups: [""]
                        resources: ["pods/log"]
                        verbs: ["get", "list", "watch"]
                      # for creating and managing to execute commands inside target container
                      - apiGroups: [""]
                        resources: ["pods/exec"]
                        verbs: ["get", "list", "create"]
                      # deriving the parent/owner details of the pod(if parent is anyof {deployment, statefulset, daemonsets})
                      - apiGroups: ["apps"]
                        resources: ["deployments", "statefulsets", "replicasets", "daemonsets"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: ["apps.openshift.io"]
                        resources: ["deploymentconfigs"]
                        verbs: ["list", "get"]
                      # deriving the parent/owner details of the pod(if parent is deploymentConfig)
                      - apiGroups: [""]
                        resources: ["replicationcontrollers"]
                        verbs: ["get", "list"]
                      # deriving the parent/owner details of the pod(if parent is argo-rollouts)
                      - apiGroups: ["argoproj.io"]
                        resources: ["rollouts"]
                        verbs: ["list", "get"]
                      # for configuring and monitor the experiment job by the chaos-runner pod
                      - apiGroups: ["batch"]
                        resources: ["jobs"]
                        verbs: ["create", "list", "get", "delete", "deletecollection"]
                      # for creation, status polling and deletion of litmus chaos resources used within a chaos workflow
                      - apiGroups: ["litmuschaos.io"]
                        resources: ["chaosengines", "chaosexperiments", "chaosresults"]
                        verbs: ["create", "list", "get", "patch", "update", "delete"]
                    image: "litmuschaos/go-runner:3.0.0"
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-delete
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "15"

                      # Period to wait before and after injection of chaos in sec
                      - name: RAMP_TIME
                        value: ""

                      - name: FORCE
                        value: "true"

                      - name: CHAOS_INTERVAL
                        value: "5"

                      ## percentage of total pods to target
                      - name: PODS_AFFECTED_PERC
                        value: ""

                      - name: TARGET_CONTAINER
                        value: ""

                      - name: TARGET_PODS
                        value: ""

                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"

                      # To select pods on specific node(s)
                      - name: NODE_LABEL
                        value: ""

                      ## it defines the sequence of chaos execution for multiple target pods
                      ## supported values: serial, parallel
                      - name: SEQUENCE
                        value: "parallel"

                    labels:
                      name: pod-delete
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.0.0
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-delete-rm5.yaml -n
            {{workflow.parameters.adminModeNamespace}} && sleep 30
        resources: {}
    - name: pod-delete
      inputs:
        artifacts:
          - name: pod-delete
            path: /tmp/chaosengine-pod-delete.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    context: "{{workflow.parameters.adminModeNamespace}}_podtato-main"
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pppp
                  annotations:
                    probeRef: '[{"name":"localPotato","mode":"EOT"}]'
                  generateName: pod-delete
                spec:
                  appinfo:
                    appns: "{{workflow.parameters.adminModeNamespace}}"
                    applabel: name=podtato-main
                    appkind: deployment
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  jobCleanUpPolicy: retain
                  components:
                    runner:
                      imagePullPolicy: Always
                  experiments:
                    - name: pod-delete
                      spec:
                        probe:
                          - name: check-podtato-main-access-url
                            type: httpProbe
                            httpProbe/inputs:
                              url: http://podtato-main.{{workflow.parameters.adminModeNamespace}}.svc.cluster.local:9000
                              insecureSkipVerify: false
                              method:
                                get:
                                  criteria: ==
                                  responseCode: "200"
                            mode: Continuous
                            runProperties:
                              probeTimeout: 1s
                              interval: 100ms
                              attempt: 1
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "10"
                            - name: FORCE
                              value: "false"
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-delete.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: delete-application
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/litmus-app-deployer:latest
        args:
          - -namespace={{workflow.parameters.adminModeNamespace}}
          - -typeName=resilient
          - -operation=delete
          - -app=podtato-head
        resources: {}
    - name: cleanup-chaos-resources
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n
            {{workflow.parameters.adminModeNamespace}}
        resources: {}
  entrypoint: argowf-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status:
  startedAt: null
  finishedAt: null
